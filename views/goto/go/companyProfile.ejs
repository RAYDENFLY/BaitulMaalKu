<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>BaitulMaalKu - Company Profile</title>
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Bootstrap JavaScript (Bootstrap.bundle.min.js) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>

    <!-- Template Main CSS File -->
    <link href="/assets/css/style.css" rel="stylesheet">

    <style>
        .pdf-container {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 80vh;
            padding-top: 20px;
        }
        #pdf-render {
            max-width: 80%;
            max-height: 80vh;
            border: 1px solid #ccc;
        }
        .pdf-controls {
            position: absolute;
            bottom: 20px;
            left: 0;
            right: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px; /* Padding horizontal agar tombol tidak terlalu dekat tepi */
        }
        .pdf-controls button {
            background-color: rgba(255, 255, 255, 0.7);
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin: 185px;
        }
        .pdf-controls button:hover {
            background-color: rgba(255, 255, 255, 0.9);
        }
        
        .mobile-instructions {
            display: none; /* Hide instructions by default */
            margin-top: 20px;
            text-align: center;
            font-size: 14px;
            color: #666;
        }

        /* Responsive adjustments */
        @media (max-width: 1118px) {
            .pdf-controls {
                display: none; /* Hide controls on mobile and tablet */
            }
            .mobile-instructions {
                display: block; /* Show instructions on mobile and tablet */
                padding-bottom: 20px;
            }
            .download-btn {
            position: absolute;
            top: 103%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #4CAF50; /* Green */
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            border: none;
            cursor: pointer;
            outline: none;
            transition: background-color 0.3s ease;
        }
        }
        .download-btn {
            position: absolute;
            top: 102%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #4CAF50; /* Green */
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            border: none;
            cursor: pointer;
            outline: none;
            transition: background-color 0.3s ease;
        }
        .download-btn:hover {
            background-color: #45a049;
        }
    </style>
</head>

<body>
    <%- include('../../partials/navbar') %>
    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <h2>Company Profile</h2>
                <ol>
                    <li><a href="/">Home</a></li>
                    <li>Company Profile</li>
                </ol>
            </div>
        </div>
    </section><!-- End Breadcrumbs -->

    <div class="pdf-container">
        <div class="pdf-controls">
            <button id="prev-page">Previous Page</button>
            <span style="margin-bottom: 450px; margin-right: 10px;">Page: <span id="page-num"></span> / <span id="page-count"></span></span>
            <button id="next-page" style="margin-right: 210px;">Next Page</button>
        </div>
        <canvas id="pdf-render"></canvas>
        <a href="/assets/pdfs/company_profile.pdf" class="download-btn" download>Download PDF</a>
        <div class="mobile-instructions">
            Tekan di kiri dan di kanan untuk navigasi
        </div>
    </div>
    <br>
    <br>
    <br>

    <!-- PDF.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const url = '/assets/pdfs/company_profile.pdf';

            let pdfDoc = null,
                pageNum = 1,
                pageIsRendering = false,
                pageNumIsPending = null;

            const scale = 1,
                canvas = document.getElementById('pdf-render'),
                ctx = canvas.getContext('2d');

            // Render the page
            const renderPage = num => {
                pageIsRendering = true;

                // Get page
                pdfDoc.getPage(num).then(page => {
                    const viewport = page.getViewport({ scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    const renderCtx = {
                        canvasContext: ctx,
                        viewport
                    };

                    page.render(renderCtx).promise.then(() => {
                        pageIsRendering = false;

                        if (pageNumIsPending !== null) {
                            renderPage(pageNumIsPending);
                            pageNumIsPending = null;
                        }
                    });

                    // Output current page
                    document.getElementById('page-num').textContent = num;
                });
            };

            // Check for pages rendering
            const queueRenderPage = num => {
                if (pageIsRendering) {
                    pageNumIsPending = num;
                } else {
                    renderPage(num);
                }
            };

            // Show Prev Page
            const showPrevPage = () => {
                if (pageNum <= 1) {
                    return;
                }
                pageNum--;
                queueRenderPage(pageNum);
            };

            // Show Next Page
            const showNextPage = () => {
                if (pageNum >= pdfDoc.numPages) {
                    return;
                }
                pageNum++;
                queueRenderPage(pageNum);
            };

            // Get Document
            pdfjsLib.getDocument(url).promise.then(pdfDoc_ => {
                pdfDoc = pdfDoc_;
                document.getElementById('page-count').textContent = pdfDoc.numPages;

                renderPage(pageNum);
            });

            // Button Events
            document.getElementById('prev-page').addEventListener('click', showPrevPage);
            document.getElementById('next-page').addEventListener('click', showNextPage);

            // Event listener for changing slides when clicking on the edge
            document.body.addEventListener('click', function (event) {
                const width = window.innerWidth;
                const clickX = event.clientX;

                // Adjust the percentage as needed
                const edgePercentage = 0.45; // 15% dari lebar jendela

                // Change slide on left side click
                if (clickX < width * edgePercentage) {
                    showPrevPage();
                }

                // Change slide on right side click
                if (clickX > width * (1 - edgePercentage)) {
                    showNextPage();
                }
            });
        });
    </script>
</body>
</html>
